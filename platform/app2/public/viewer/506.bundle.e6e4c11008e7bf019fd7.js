"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[506],{53506:(e,t,n)=>{n.r(t),n.d(t,{default:()=>g,hydrateRTDisplaySet:()=>R.Z});const r=JSON.parse('{"u2":"@ohif/extension-cornerstone-dicom-rt"}').u2,s=`${r}.sopClassHandlerModule.dicom-rt`;var a=n(43001),o=n(61529),i=n(67540);const{DicomMessage:c,DicomMetaDictionary:u}=i.default.data,l=i.default.data.Colors.dicomlab2RGB;async function d(e,t,n,r){const s=e.getModuleEntry("@ohif/extension-cornerstone.utilityModule.common"),a=e.getActiveDataSource()[0],{bulkDataURI:o}=a.getConfig?.()||{},{dicomLoaderService:i}=s.exports;!function(e){e.images.map((e=>({imageId:e.imageId,sopInstanceUID:e.SOPInstanceUID})))}(n);t.isLoaded=!0;let l=t.instance;if(o&&o.enabled)await async function(e,t){if(!e||!e.ROIContourSequence)return Promise.reject("Invalid instance object or ROIContourSequence");const n=new Map;for(const r of e.ROIContourSequence){const s=r.ReferencedROINumber;if(r&&r.ContourSequence)for(const a of r.ContourSequence){if(!a||!a.ContourData)return Promise.reject("Invalid Contour or ContourData");const r=a.ContourData;if(Array.isArray(r))n.has(s)?n.get(s).push(Promise.resolve(r)):n.set(s,[Promise.resolve(r)]);else{if(!r||!r.BulkDataURI)return Promise.reject(`Invalid ContourData: ${r}`);{const a=r.BulkDataURI;if(!t||!t.retrieve||!t.retrieve.bulkDataURI)return Promise.reject("Invalid datasource object or retrieve function");const o=t.retrieve.bulkDataURI({BulkDataURI:a,StudyInstanceUID:e.StudyInstanceUID,SeriesInstanceUID:e.SeriesInstanceUID,SOPInstanceUID:e.SOPInstanceUID});n.has(s)?n.get(s).push(o):n.set(s,[o])}}}else n.set(s,[Promise.resolve([])])}const r=new Map;for(const[e,t]of n.entries())r.set(e,await Promise.allSettled(t));e.ROIContourSequence.forEach((e=>{try{const t=e.ReferencedROINumber,n=r.get(t);e.ContourSequence&&e.ContourSequence.forEach(((e,t)=>{const r=n[t];if("fulfilled"===r.status)if(Array.isArray(r.value)&&r.value.every(Number.isFinite))e.ContourData=r.value;else{const t=new Uint8Array(r.value),n=(new TextDecoder).decode(t);"string"==typeof n&&n.includes("\\")?e.ContourData=n.split("\\").map(parseFloat):e.ContourData=[]}else console.error(r.reason)}))}catch(e){console.error(e)}}))}(l,a);else{const e=await i.findDicomDataPromise(t,null,r),n=c.readFile(e),s=u.naturalizeDataset(n.dict);s._meta=u.namifyDataset(n.meta),l=s}const{StructureSetROISequence:d,ROIContourSequence:S,RTROIObservationsSequence:f}=l,D={StructureSetLabel:l.StructureSetLabel,SeriesInstanceUID:l.SeriesInstanceUID,ROIContours:[],visible:!0};for(let e=0;e<S.length;e++){const t=S[e],{ContourSequence:n}=t;if(!n)continue;const r=!1,s=(p=n,Array.isArray(p)?p:[p]),a=[];for(let e=0;e<s.length;e++){const{ContourImageSequence:t,ContourData:n,NumberOfContourPoints:r,ContourGeometricType:o}=s[e];let i=!1;const c=[];for(let e=0;e<3*r;e+=3)c.push({x:n[e],y:n[e+1],z:n[e+2]});switch(o){case"CLOSED_PLANAR":case"OPEN_PLANAR":case"POINT":i=!0;break;default:continue}a.push({numberOfPoints:r,points:c,type:o,isSupported:i})}I(D,d,f,t,a,r)}var p;return D}function I(e,t,n,r,s,a){const o=t.find((e=>e.ROINumber===r.ReferencedROINumber)),i={ROINumber:o.ROINumber,ROIName:o.ROIName,ROIGenerationAlgorithm:o.ROIGenerationAlgorithm,ROIDescription:o.ROIDescription,isSupported:a,contourPoints:s,visible:!0};!function(e,t){let{ROIDisplayColor:n,RecommendedDisplayCIELabValue:r}=e;!n&&r&&(n=l(r));n&&(t.colorArray=[...n])}(r,i),n&&function(e,t,n){const r=t.find((e=>e.ReferencedROINumber===n));if(r){const{ObservationNumber:t,ROIObservationDescription:n,RTROIInterpretedType:s,ROIInterpreter:a}=r;e.RTROIObservations={ObservationNumber:t,ROIObservationDescription:n,RTROIInterpretedType:s,ROIInterpreter:a}}}(i,n,r.ReferencedROINumber),e.ROIContours.push(i)}const S=["1.2.840.10008.5.1.4.1.1.481.3"];let f={};function D(e,t,n){const r=e[0],{StudyInstanceUID:a,SeriesInstanceUID:i,SOPInstanceUID:c,SeriesDescription:u,SeriesNumber:l,SeriesDate:I,SOPClassUID:D,wadoRoot:p,wadoUri:R,wadoUriRoot:m}=r,O={Modality:"RTSTRUCT",loading:!1,isReconstructable:!1,displaySetInstanceUID:o.utils.guid(),SeriesDescription:u,SeriesNumber:l,SeriesDate:I,SOPInstanceUID:c,SeriesInstanceUID:i,StudyInstanceUID:a,SOPClassHandlerId:s,SOPClassUID:D,referencedImages:null,referencedSeriesInstanceUID:null,referencedDisplaySetInstanceUID:null,isDerivedDisplaySet:!0,isLoaded:!1,isHydrated:!1,structureSet:null,sopClassUids:S,instance:r,wadoRoot:p,wadoUriRoot:m,wadoUri:R,isOverlayDisplaySet:!0};let y=r.ReferencedSeriesSequence;if(r.ReferencedFrameOfReferenceSequence&&!r.ReferencedSeriesSequence&&(r.ReferencedSeriesSequence=function(e){const t=[];return e.forEach((e=>{const{RTReferencedStudySequence:n}=e;n.forEach((e=>{const{RTReferencedSeriesSequence:n}=e;n.forEach((e=>{const n=[],{ContourImageSequence:r,SeriesInstanceUID:s}=e;r.forEach((e=>{n.push({ReferencedSOPInstanceUID:e.ReferencedSOPInstanceUID,ReferencedSOPClassUID:e.ReferencedSOPClassUID})}));const a={SeriesInstanceUID:s,ReferencedInstanceSequence:n};t.push(a)}))}))})),t}(r.ReferencedFrameOfReferenceSequence),y=r.ReferencedSeriesSequence),!y)throw new Error("ReferencedSeriesSequence is missing for the RTSTRUCT");const g=y[0];return O.referencedImages=r.ReferencedSeriesSequence.ReferencedInstanceSequence,O.referencedSeriesInstanceUID=g.SeriesInstanceUID,O.getReferenceDisplaySet=()=>{const{DisplaySetService:e}=t.services,n=e.getDisplaySetsForSeries(O.referencedSeriesInstanceUID);if(!n||0===n.length)throw new Error("Referenced DisplaySet is missing for the RT");const r=n[0];return O.referencedDisplaySetInstanceUID=r.displaySetInstanceUID,r},O.load=e=>{let{headers:r}=e;return function(e,t,n,r){const{SOPInstanceUID:s}=e,{segmentationService:a}=t.services;(e.loading||e.isLoaded)&&f[s],0;return e.loading=!0,f[s]=new Promise((async(t,s)=>{if(!e.structureSet){const t=await d(n,e,e.getReferenceDisplaySet(),r);e.structureSet=t}const o=!0;a.createSegmentationForRTDisplaySet(e,null,o).then((()=>{e.loading=!1,t()})).catch((t=>{e.loading=!1,s(t)}))})),f[s]}(O,t,n,r)},[O]}const p=function(e){let{servicesManager:t,extensionManager:n}=e;return[{name:"dicom-rt",sopClassUids:S,getDisplaySetsFromSeries:e=>D(e,t,n)}]};var R=n(50995);function m(){return m=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},m.apply(this,arguments)}const O=a.lazy((()=>n.e(471).then(n.bind(n,56471)))),y=e=>a.createElement(a.Suspense,{fallback:a.createElement("div",null,"Loading...")},a.createElement(O,e)),g={id:r,getViewportModule(e){let{servicesManager:t,extensionManager:n,commandsManager:r}=e;return[{name:"dicom-rt",component:e=>a.createElement(y,m({servicesManager:t,extensionManager:n,commandsManager:r},e))}]},getSopClassHandlerModule:p}},50995:(e,t,n)=>{n.d(t,{Z:()=>r});const r=async function(e){let{rtDisplaySet:t,viewportIndex:n,servicesManager:r}=e;const{segmentationService:s,hangingProtocolService:a,viewportGridService:o}=r.services,i=t.referencedDisplaySetInstanceUID;let c=null;c=await s.createSegmentationForRTDisplaySet(t,c,!1),s.hydrateSegmentation(t.displaySetInstanceUID);const{viewports:u}=o.getState(),l=a.getViewportsRequireUpdate(n,i);return o.setDisplaySetsForViewports(l),u.forEach(((e,r)=>{if(r===n)return;s.shouldRenderSegmentation(e.displaySetInstanceUIDs,t.displaySetInstanceUID)&&l.push({viewportIndex:r,displaySetInstanceUIDs:e.displaySetInstanceUIDs,viewportOptions:{initialImageOptions:{preset:"middle"}}})})),o.setDisplaySetsForViewports(l),!0}}}]);
//# sourceMappingURL=506.bundle.e6e4c11008e7bf019fd7.js.map